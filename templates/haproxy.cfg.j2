# {{ ansible_managed }}
# config for haproxy 1.5.x

global
    log 127.0.0.1   local0
    log 127.0.0.1   local1 notice
    maxconn 4096
    user haproxy
    group haproxy
    daemon

    tune.ssl.default-dh-param 2048


defaults
    log global
    mode http

    option httplog
    option dontlognull
    option forwardfor

    timeout connect 5000
    timeout client  50000
    timeout server  50000

    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http
    

{% if haproxy_stats_users is defined and haproxy_stats_users[0] is defined %}
    stats enable
    stats uri {{ haproxy_stats_uri }}
    stats realm Strictly\ Private
{% for user in haproxy_stats_users %}
    stats auth {{ user.username }}:{{ user.password }}
{% endfor %}
{% endif %}
    
{% if haproxy_frontends is defined %} 
{% set haproxy_configure_frontends = haproxy_frontends %}
{% else %}
{% set haproxy_configure_frontends = haproxy_default_frontends %}
{% endif %}
{% set __certificates -%}
	{% include "certs.j2" %} 
{%- endset %}

{% for frontend_name, frontend_config in haproxy_configure_frontends.iteritems() %}
# {{frontend_name}} frontend for all http traffic
##################################################
{% set __frontend_index=loop.index %}
frontend http-{{frontend_name}}
    bind {{ frontend_config.bind_address }}:80
    mode http
	{% set __configure_http=true %}
	{% set __configure_https=false %}
	{%- include "domains.j2" %}

{% if __certificates != '' %}
# {{ frontend_name }} frontend for all https traffic
##################################################
frontend https-{{ frontend_name }}
    bind {{ frontend_config.bind_address }}:443 ssl {{ __certificates }}
    mode http
	{% set __configure_http=false %}
	{% set __configure_https=true %}
	{%- include "domains.j2" %}
{% endif -%}

{% endfor %}  
 
# define backends
##################################################
{# ---- backends for default route / ---- #}

# default domain backends ########################
{% for domain, config in haproxy_domains.iteritems() %}

##### backend for domain: {{ domain }} #####
backend backend.{{ domain }}
    mode http
{% include "backends.j2" %}
{% endfor %}

# special routes #################################

{# -- loop trough routes an include backend again #}
{% for domain, masterconfig in haproxy_domains.iteritems() %}
{% set routingbackends=masterconfig.backend.routing|default({}) %}
{% for route, config in routingbackends.iteritems() %}
##### backend for domain: {{ domain }} route: /{{ route }} #####
{% set suffix='.' + route|replace('/','--') %}
backend backend.{{ domain }}{{ suffix }}
    mode http
{% include "backends.j2" %}
{% endfor %}
{% endfor %}

# letsencrypt route ################################

{# -- letsencrypt special backend -- #}
{% for domain, masterconfig in haproxy_domains.iteritems() %}
{% if haproxy_letsencrypt_validation %}
##### backend for domain: {{ domain }} letsencrypt validation
backend backend.letsencrypt-{{ domain }}
   mode http
   reqrep ^([^\ :]*)\ /.well-known/acme-challenge/(.*)     \1\ /{{ domain}}/.well-known/acme-challenge/\2
   server node1.backend.letsencrypt-{{ domain }} {{ haproxy_letsencrypt_validation_server }} check
{% endif  %}
{% endfor %}


{% if haproxy_mysql_cluster and haproxy_mysql_nodes[0] is defined %}
{% include "galera-cluster.j2" %}
{% endif %}

{% if haproxy_tcp_listen and haproxy_tcp_listen[0] is defined %}
{% include "haproxy-listen.j2" %}
{% endif %}

